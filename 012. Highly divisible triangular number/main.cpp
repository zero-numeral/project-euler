#include <iostream>

/*
*   https://en.wikipedia.org/wiki/Divisor_function
* 
*   The sequence of triangle numbers is generated by adding the natural numbers.
*   So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
*   1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
*   
*   What is the value of the first triangle number to have over five hundred divisors?
*
*   Answer: 76576500
*/

uint64_t count_factors(uint64_t n) 
{
    uint64_t count = 1;
    uint64_t limit = (uint64_t)sqrt(n) + 1;

    for (uint64_t i = 2; i < limit; ++i) 
    {
        uint64_t c = 0;
        while (n % i == 0) {
            n /= i;
            c++;
        }
        count *= c + 1;
    }

    return count;
}

int main()
{
    for (uint64_t i = 0;; ++i) 
    {
        uint64_t t = (i * (i + 1)) >> 1;
        if (count_factors(t) > 500) 
        {
            std::cout << t;
            break;
        }
    }

    return 0;
}